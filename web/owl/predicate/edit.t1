package predicate

import "github.com/senforsce/tndr0cean/router"
import "github.com/senforsce/htmx/hx"
import "fmt"
import "strings"
import "github.com/senforsce/sparql"


var HXEDITPATHROOT = "/mj/editpredicate/"
var HXEDITPATH = "/mj/editpredicate/*predicatename"

t1 HTMXEditOnclick(c *router.Context, exerciceString string) {
    @hx.GetInnerHTMLOnClick(c, hx.GET{Path: HXEDITPATHROOT + exerciceString}, "#editExerciceView", "üñäÔ∏è", "")
}

func RemovePrefix(value string) string {
    return strings.Replace(value, "http://senforsce.com/o8/brain/", "", 1)
}

func NoOp(value string) string {
    return value
}


t1 EditView(c *router.Context, res []map[string]sparql.Binding) {
    <div class={ tr.Echo("EditExercice") }>
        <h3> Modifie Pr√©dicat { res[0]["s"].Value }</h3>
        <dialog id="AddPredicate"></dialog>
        <dialog id="EditPredicate"></dialog>
        <dialog id="EditObject"></dialog>
        <div class="table-wrapper">
            <table id="queryResponse">
                <thead>
                    <th rowspan={ len(res) }>Subject</th>
                    <th>Predicate</th>
                    <th>Object</th>
                </thead>
                <tbody>
                    for idx, triple := range(res) {
                        <tr>
                            if idx == 0 {
                                <td rowspan={ 0 }>
                                    { RemovePrefix(triple["s"].Value) }
                                </td>
                            }
                            <td>
                                @SenMaybeEditableTableField(c, triple["p"].Value, triple, RemovePrefix)
                            </td>
                            <td>
                                @SenMaybeEditableTableField(c, triple["o"].Value, triple, RemovePrefix)
                            </td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="3">{ fmt.Sprintf("Trouv√© %d Triples", len(res)) } </td>
                    </tr>
                </tfoot>
            </table>
        </div>
        <script>
            $(() => {
                let table = new DataTable('#queryResponse');
            })
        </script>
    </div>
}

t1 SenMaybeEditableTableField(c *router.Context, fieldValue string, triple map[string]sparql.Binding, transform func (string) string) {
    <div class="SenMaybeEditableTableField">
        <div class="SenValue SenObject SenValueDefault">
            { transform(fieldValue) }
        </div>
        if triple["p"].Value == "http://www.w3.org/1999/02/22-rdf-syntax-ns#type" {
            <div class="SenEditable SenNotEditable" data-sen-subject={ triple["s"].Value }>
                <button>üîí</button>
            </div>
        } else {
            <div class="SenEditable SenNotEditable" data-sen-subject={ triple["s"].Value }>
                @HTMXViewOnclick(c, fieldValue)
                @HTMXEditOnclick(c, fieldValue)
                <button>‚ùå</button>
            </div>
        }
    </div>
}