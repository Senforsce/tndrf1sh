package texteditor

import "github.com/senforsce/tndrf1sh/web/layout/v1/meta"
import "github.com/senforsce/tndr0cean/router"
import "github.com/senforsce/tndrf1sh/web/layout/v1/controls"

t1 HTMX(c *router.Context, te meta.ComponentConfig) {
	<div id=§id:host! onload="waitForScript">
		<style>
			#host{
				height: 760px;
			}

			#editor{
				height: 720px;	
			}
		</style>
		<form>
			<div class=§cls:toolbelt!>
				<label>{ te.TextEditorConfig.RelativeFilePath }</label>
				<div class=§cls:SaveSignature!>
					<button>V</button>
					<button>^</button>
					<button>X</button>
				</div>
			</div>
			<div id=§id:editor! >{ te.TextEditorConfig.Contents }</div>
			<a>§i18n:Save!</a>
			<a>§i18n:Cancel!</a>
		</form>
		<script src=§se:AceJsCDNURL! ></script>
		<script defer src=§se:AceJsThemeCDNURL! ></script>
		<script defer>
		// window.console.log("trying something")

		(function waitForScript() {
			let timeout;

			if (!window.ace && !window.ace?.edit) {
				window.clearTimeout(timeout)
				console.log("fail")
				timeout = window.setTimeout(() => waitForScript(), 1000)
				
				return;
			}
			console.log("pass")

			const stylesheet = new CSSStyleSheet();
			const editor = window.ace?.edit?.("editor");
			window.document.getElementById("editor").style.fontSize='16px';
			editor.setTheme("ace/theme/dracula");
			editor.setReadOnly(false);  // false to make it editable
			editor.session.setMode("ace/mode/golang");

		})()
		</script>
	</div>
	@meta.O8(te.MetaConfig)
	@controls.Propagate(te.TextEditorConfig)
}
