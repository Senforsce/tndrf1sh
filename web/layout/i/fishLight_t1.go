// Code generated by Tndr(t1) - DO NOT EDIT.

// Tndr(t1): version: v0.0.3

package i

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/senforsce/tndr"
import "context"
import "io"
import "bytes"

func FishLight() t1.Component {
	return t1.ComponentFunc(func(ctx context.Context, t1_7745c5c3_W io.Writer) (t1_7745c5c3_Err error) {
		t1_7745c5c3_Buffer, t1_7745c5c3_IsBuffer := t1_7745c5c3_W.(*bytes.Buffer)
		if !t1_7745c5c3_IsBuffer {
			t1_7745c5c3_Buffer = t1.GetBuffer()
			defer t1.ReleaseBuffer(t1_7745c5c3_Buffer)
		}
		ctx = t1.InitializeContext(ctx)
		t1_7745c5c3_Var1 := t1.GetChildren(ctx)
		if t1_7745c5c3_Var1 == nil {
			t1_7745c5c3_Var1 = t1.NopComponent
		}
		ctx = t1.ClearChildren(ctx)
		_, t1_7745c5c3_Err = t1_7745c5c3_Buffer.WriteString("<svg width=\"800px\" height=\"800px\" viewBox=\"0 0 32 32\" id=\"fish_Light\" data-name=\"fish/Light\" xmlns=\"http://www.w3.org/2000/svg\"><path id=\"Path\" d=\"M0,0H2V8H0Z\" fill=\"#1a1a1a\"></path> <path id=\"Path-2\" data-name=\"Path\" d=\"M2,0H32V32H26V30h2V28h2V24H26V20h2V12H24V10H22V8H20V6H10v6H6v8H8v2h2v2h2v2H22v6H0V8H2Z\" fill=\"#ffffff\"></path> <path id=\"Path-3\" data-name=\"Path\" d=\"M0,0H2V4H0Z\" transform=\"translate(4 4)\" fill=\"#1a1a1a\"></path> <path id=\"Path-4\" data-name=\"Path\" d=\"M4,0H14V2H6v8H2v4H0V6H4Z\" transform=\"translate(6 6)\" fill=\"#1a1a1a\"></path> <path id=\"Path-5\" data-name=\"Path\" d=\"M0,0H2V2H0Z\" transform=\"translate(2 8)\" fill=\"#1a1a1a\"></path> <path id=\"Path-6\" data-name=\"Path\" d=\"M4,0h8V2h2V4H12V6H10V2H6V6h4V8H8v2H4v4H2V12H0V8H4Z\" transform=\"translate(8 8)\" fill=\"#ffffff\"></path> <path id=\"Path-7\" data-name=\"Path\" d=\"M0,0H2V2H0Z\" transform=\"translate(20 8)\" fill=\"#1a1a1a\"></path> <path id=\"Path-8\" data-name=\"Path\" d=\"M0,0H4V4H0Z\" transform=\"translate(14 10)\" fill=\"#1a1a1a\"></path> <path id=\"Path-9\" data-name=\"Path\" d=\"M2,0H4V2H8v8H6V4H4v6H2V4H0V2H2Z\" transform=\"translate(20 10)\" fill=\"#1a1a1a\"></path> <path id=\"Path-10\" data-name=\"Path\" d=\"M0,0H2V2H0Z\" transform=\"translate(18 14)\" fill=\"#1a1a1a\"></path> <path id=\"Path-11\" data-name=\"Path\" d=\"M4,0H6V6H8v6H6V10H2V6H0V4H2V2H4Z\" transform=\"translate(16 14)\" fill=\"#ffffff\"></path> <path id=\"Path-12\" data-name=\"Path\" d=\"M0,0H2V6H0Z\" transform=\"translate(24 14)\" fill=\"#ffffff\"></path> <path id=\"Path-13\" data-name=\"Path\" d=\"M0,0H2V2H0Z\" transform=\"translate(16 16)\" fill=\"#1a1a1a\"></path> <path id=\"Path-14\" data-name=\"Path\" d=\"M2,0H6V2H4V6H6V2H8V6h4V8H2V6H0V4H2Z\" transform=\"translate(10 18)\" fill=\"#1a1a1a\"></path> <path id=\"Path-15\" data-name=\"Path\" d=\"M0,0H2V2H0Z\" transform=\"translate(8 20)\" fill=\"#1a1a1a\"></path> <path id=\"Path-16\" data-name=\"Path\" d=\"M0,0H2V4H0Z\" transform=\"translate(14 20)\" fill=\"#ffffff\"></path> <path id=\"Path-17\" data-name=\"Path\" d=\"M0,0H2V4H6V8H4V6H0Z\" transform=\"translate(24 20)\" fill=\"#1a1a1a\"></path> <path id=\"Path-18\" data-name=\"Path\" d=\"M0,0H2V4H4V6H0Z\" transform=\"translate(22 26)\" fill=\"#1a1a1a\"></path> <path id=\"Path-19\" data-name=\"Path\" d=\"M0,0H4V2H2V4H0Z\" transform=\"translate(24 26)\" fill=\"#ffffff\"></path> <path id=\"Path-20\" data-name=\"Path\" d=\"M0,0H2V2H0Z\" transform=\"translate(26 28)\" fill=\"#1a1a1a\"></path></svg>")
		if t1_7745c5c3_Err != nil {
			return t1_7745c5c3_Err
		}
		if !t1_7745c5c3_IsBuffer {
			_, t1_7745c5c3_Err = t1_7745c5c3_Buffer.WriteTo(t1_7745c5c3_W)
		}
		return t1_7745c5c3_Err
	})
}
